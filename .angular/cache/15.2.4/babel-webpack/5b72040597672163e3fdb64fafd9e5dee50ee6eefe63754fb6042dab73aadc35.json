{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { timeout } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiServiceService {\n  constructor(http) {\n    this.http = http;\n    this.API = 'http://localhost:8088/tgbot';\n  }\n  getApiOnline() {\n    let header = new HttpHeaders().set('Access-Control-Allow-Origin', this.API + \"/actuator/health\");\n    return this.http.get(this.API + \"/actuator/health\", {\n      observe: 'response',\n      headers: header\n    }).pipe(timeout(1000));\n  }\n}\nApiServiceService.ɵfac = function ApiServiceService_Factory(t) {\n  return new (t || ApiServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiServiceService,\n  factory: ApiServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAAqBC,OAAO,QAAQ,MAAM;;;AAK1C,OAAM,MAAOC,iBAAiB;EAI5BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFP,QAAG,GAAG,6BAA6B;EAEb;EAEvCC,YAAY;IACV,IAAIC,MAAM,GAAG,IAAIN,WAAW,EAAE,CAACO,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAACC,GAAG,GAAG,kBAAkB,CAAC;IAChG,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,IAAI,CAACD,GAAG,GAAG,kBAAkB,EAAE;MAACE,OAAO,EAAE,UAAU;MAAEC,OAAO,EAAEL;IAAM,CAAC,CAAC,CAACM,IAAI,CAACX,OAAO,CAAC,IAAI,CAAC,CAAC;EACjH;;AATWC,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAW,SAAjBX,iBAAiB;EAAAY,YAFhB;AAAM","names":["HttpHeaders","timeout","ApiServiceService","constructor","http","getApiOnline","header","set","API","get","observe","headers","pipe","factory","providedIn"],"sourceRoot":"","sources":["C:\\git\\front api telegram\\APITelegramFront\\src\\app\\service\\api-service.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, timeout } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiServiceService {\n\n  private readonly API = 'http://localhost:8088/tgbot'\n\n  constructor(private http: HttpClient) {}\n\n  getApiOnline() {\n    let header = new HttpHeaders().set('Access-Control-Allow-Origin', this.API + \"/actuator/health\")\n    return this.http.get(this.API + \"/actuator/health\", {observe: 'response', headers: header}).pipe(timeout(1000));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}