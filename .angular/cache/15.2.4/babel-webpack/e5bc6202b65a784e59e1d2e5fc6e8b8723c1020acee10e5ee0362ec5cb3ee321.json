{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ArduinoService {\n  constructor(http) {\n    this.http = http;\n    this.PRE = \"http://\";\n    this.endPoint = '/valid';\n  }\n  getIpValido(url) {\n    return this.http.get(this.PRE + url + this.endPoint, {\n      observe: 'response',\n      headers: this.getHeader()\n    });\n  }\n  getHeader(url) {\n    const header = new HttpHeaders();\n    header.set(\"Access-Control-Allow-Origin\", \"*\");\n    header.set(\"Access-Control-Allow-Methods\", \"GET, POST, PUT\");\n    header.set(\"Access-Control-Allow-Headers\", \"Content-Type\");\n  }\n}\nArduinoService.ɵfac = function ArduinoService_Factory(t) {\n  return new (t || ArduinoService)(i0.ɵɵinject(i1.HttpClient));\n};\nArduinoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ArduinoService,\n  factory: ArduinoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHP,QAAG,GAAG,SAAS;IACf,aAAQ,GAAG,QAAQ;EAEI;EAExCC,WAAW,CAACC,GAAW;IACrB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACC,GAAG,GAAGF,GAAG,GAAG,IAAI,CAACG,QAAQ,EAAE;MAACC,OAAO,EAAE,UAAU;MAAEC,OAAO,EAAE,IAAI,CAACC,SAAS;IAAE,CAAC,CAAC;EACxG;EAEQA,SAAS,CAACN,GAAW;IAC3B,MAAMO,MAAM,GAAG,IAAIZ,WAAW,EAAE;IAChCY,MAAM,CAACC,GAAG,CAAC,6BAA6B,EAAE,GAAG,CAAC;IAC9CD,MAAM,CAACC,GAAG,CAAC,8BAA8B,EAAE,gBAAgB,CAAC;IAC5DD,MAAM,CAACC,GAAG,CAAC,8BAA8B,EAAE,cAAc,CAAC;EAC5D;;AAhBWZ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAa,SAAdb,cAAc;EAAAc,YAFb;AAAM","names":["HttpHeaders","ArduinoService","constructor","http","getIpValido","url","get","PRE","endPoint","observe","headers","getHeader","header","set","factory","providedIn"],"sourceRoot":"","sources":["C:\\git\\front api telegram\\APITelegramFront\\src\\app\\service\\arduino.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArduinoService {\r\n\r\n  private readonly PRE = \"http://\";\r\n  private readonly endPoint = '/valid';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getIpValido(url: string) {\r\n    return this.http.get(this.PRE + url + this.endPoint, {observe: 'response', headers: this.getHeader()});\r\n  }\r\n\r\n  private getHeader(url: string) {\r\n    const header = new HttpHeaders();\r\n    header.set(\"Access-Control-Allow-Origin\", \"*\");\r\n    header.set(\"Access-Control-Allow-Methods\", \"GET, POST, PUT\");\r\n    header.set(\"Access-Control-Allow-Headers\", \"Content-Type\");\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}